//the component is used to generate the csv manully for knn training in the controller

//to run please launch command line or terminal in same directory as this file in a dana installed pc and do dana gen_csv.dn and then dana gen_csv

//make sure ml_log.txt file is in the same directory as this files compiled version

uses time.DateTime
uses ws.forms.FileFormField
component provides App requires io.Output out, data.StringUtil stringUtil,data.IntUtil intUtl,io.File, os.Run run,net.http.HTTPRequest rq  {
 
	/**
	*this is main function the runs the csv gen
	*
	*inputs:
	*
	*result:
	*csv generated in same directory 
	*/

	
	int App:main(AppParam params[])
	{	
		run_csv_gen()
		return 0
	}
	
	/**
	*this function generates the csv log used in knn training
	*
	*
	*inputs:
	*
	*result:
	*generated log file in the same directory as the cntrlr.o file  
	*/
	
	
	void run_csv_gen()
	{
	
		char ml_log_csv[] = "ml_log_csv.csv"
		char log_name_ml[] ="ml_log.txt"
		char d[]
		String tmp[]
		char avg_ttr[]
		char min_avg_ttr[]
		char stat[]
		
		RunStatus s = run.execute("if exist $ml_log_csv break> $ml_log_csv")
		
		d = read_file(log_name_ml)
		tmp = stringUtil.explode(d,">")
		write_to_file(ml_log_csv,"AVG_TTR,MIN_AVG_TTR,Status,")
		for(int i = 0; i < tmp.arrayLength ; i++){
		
			avg_ttr = stringUtil.explode(stringUtil.explode(stringUtil.explode(tmp[i].string,":")[4].string,"\n\r")[0].string," ")[0].string
			min_avg_ttr = stringUtil.explode(stringUtil.explode(stringUtil.explode(tmp[i].string,":")[5].string,"\n\r")[0].string," ")[0].string
			stat = stringUtil.explode(stringUtil.explode(stringUtil.explode(tmp[i].string,":")[7].string,"\n\r")[0].string," ")[0].string
			
			//out.println("file is:\n $(tmp[i].string)$avg_ttr,$min_avg_ttr,$stat")
			out.print("-")
			write_to_file(ml_log_csv,"$avg_ttr,$min_avg_ttr,$stat,")
		
		}
		s = run.execute("$ml_log_csv")
	
	}

	/**
	*this functions write to a file in the same directory as the web.dn file
	*
	*inputs:
	*char f_n[] name of file to write to
	*char d[] data to be written onto the file
	*
	*result:
	*specified file with the given data in the same directory as the web.dn file  
	*/

	
	void write_to_file(char f_n[],char d[])
	{	
		File f = new File(f_n, File.FILE_ACCESS_WRITE)
		f.setPos(f.getSize())
		f.write("$d\n")
		f.close()
	}
	
	/**
	*this functions reads from a file in the same directory as the web.dn file
	*
	*inputs:
	*char f_n[] name of file to read from
	*
	*result:
	*char array with the contents of the file in it  
	*/
	
	
	char[] read_file(char f_name[])
	{
		File f = new File(f_name, File.FILE_ACCESS_READ)
		char q[] = f.read(f.getSize())
		f.close()
		return q
		
	}
	
	
}