uses time.DateTime
component provides App requires io.Output out, data.StringUtil stringUtil,data.IntUtil intUtl,io.File, os.Run run  {
 
 
	
	int App:main(AppParam params[])
	{	
		String ips_to_check[] = stringUtil.explode(read_file("ips_to_check.txt"), "\n\r")
		char log_name[] ="controller_table_log.txt"
		char av_host[]
		RunStatus s = run.execute("if exist free_ips.txt break> free_ips.txt")
		for(int i=0;i<ips_to_check.arrayLength;i++)
		{
			
			
			s = run.execute("\\\\$(ips_to_check[i].string)\\MSCI\\Fyp_masters\\Fyp_code\\FYP_Masters\\Docker_dana_server\\run_log_gen.bat")
			if(stringUtil.explode(stringUtil.explode(read_file("\\\\$(ips_to_check[i].string)\\MSCI\\Fyp_masters\\Fyp_code\\FYP_Masters\\Docker_dana_server\\$log_name"),"\n\r")[5].string,":")[1].string == "FREE")
			{
				av_host =stringUtil.explode(stringUtil.explode(read_file("\\\\$(ips_to_check[i].string)\\MSCI\\Fyp_masters\\Fyp_code\\FYP_Masters\\Docker_dana_server\\$log_name"),"\n\r")[0].string,":")[1].string
			}
			
			write_to_file("free_ips.txt",av_host)
			
		}
		
		return 0
	}
	
	
	

						
	
	
	
	void write_to_file(char f_n[],char d[])
	{	
		File f = new File(f_n, File.FILE_ACCESS_WRITE)
		f.setPos(f.getSize())
		f.write("$d\n")
		f.close()
	}
	
	char[] read_file(char f_name[])
	{
		File f = new File(f_name, File.FILE_ACCESS_READ)
		char q[] = f.read(f.getSize())
		f.close()
		return q
		
	}
	
	
}